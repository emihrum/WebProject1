package forum.database.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import forum.database.domain.User;

public class DataProvider implements AutoCloseable{
	private Connection connection;

	public DataProvider() {
		try {
			connection = DriverManager.getConnection("jdbc:derby:memory:forum-database;create=true");
		} catch (SQLException e) {
			throw (new RuntimeException(e));
		}
	}

	public void createUserTable() {
		Statement statement = null;
		try {
			statement = connection.createStatement();
			statement.executeUpdate("CREATE TABLE \"User\" (" 
					+ "Name VARCHAR(255)," 
					+ "Email VARCHAR(255),"
					+ "Password VARCHAR(255)," 
					+ "PRIMARY KEY (Email)" 
					+ ")");
			statement.close();
		} catch (SQLException e) {
			throw (new RuntimeException(e));
		}
	}
	
	public void addUser(User user) {
		try {
			PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO \"User\" "
					+ "(Name, Email, Password) VALUES "
					+ "(?, ?, ?)");
			preparedStatement.setString(1, user.getName());
			preparedStatement.setString(2, user.getEmail());
			preparedStatement.setString(3, user.getPassword());
			preparedStatement.executeUpdate();
			preparedStatement.close();
		} catch (SQLException e) {
			throw (new RuntimeException(e));
		}
	}
	
	public List<User> getUsers() {
		try {
			Statement statement = connection.createStatement();
			ResultSet result = statement.executeQuery("SELECT * FROM \"User\"");
			List<User> users = new ArrayList<User>();
			while(result.next()) {
				User user = new User();
				user.setName(result.getString("Name"));
				user.setEmail(result.getString("Email"));
				user.setPassword(result.getString("Password"));
				users.add(user);
			}
			result.close();
			statement.close();
			return users;
		} catch(SQLException e) {
			throw (new RuntimeException(e));
		}
	}

	public void close() throws Exception {
		if (connection != null) {
			try {
				connection.close();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}		
	}
}
